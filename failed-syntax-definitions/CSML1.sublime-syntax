%YAML 1.2
---
# See https://www.sublimetext.com/docs/syntax.html
# Regex engine https://raw.githubusercontent.com/kkos/oniguruma/v6.9.1/doc/RE

# For examples,
# HTML: https://github.com/sublimehq/Packages/blob/master/HTML/HTML.sublime-syntax
# CSS3: https://github.com/ryboe/CSS3/blob/master/CSS3.sublime-syntax
# JS: https://github.com/sublimehq/Packages/blob/master/JavaScript/JavaScript.sublime-syntax
# YAML: https://github.com/sublimehq/Packages/blob/master/YAML/YAML.sublime-syntax#L455-L477
file_extensions:
- csml
scope: source.example-c
variables:
  ascii_space: '\t\n\f '
  indent: '[\t ]'
  full_indent: ^({{indent}}*)

  preformatted_flag: :(text-only|indent)

  ident_start: '[-\w]' # Really [-\w\u{B7}\u{C0}-\u{EFFFF}]
  ident: '{{ident_start}}*'

# Notes
# CSML is indentation-based, which makes certain
# situations a bit difficult. We'll need to be a bit clever
# matching the indentation and then using the capture group
# \1.

contexts:
  main:
  - match: ^\s*$
  - match: ^(?={{indent}}*@script\b)
    push:
    - match: ({{full_indent}})
      push: at_script
  - match: ^(?={{indent}}*@\w)
    push:
    - match: ({{full_indent}})
      push: at_statement
      pop: 1
  - match: ^(?={{indent}}*{{preformatted_flag}})
    push:
    - match: ({{full_indent}})
      push: preformatted_flag
      pop: 1
  - match: ^(?={{indent}}*:{{ident_start}})
    push:
    - match: ({{full_indent}})
      push: non_preformatted_flag
      pop: 1
  - match: ^(?={{indent}}*(?:{{ident_start}}|{{))
    push:
    - match: ({{full_indent}})
      push: selector_start

  ### Indentation #########################################
  # Indentation-related helpers
  indent_require_same_level:
  - match: ^\s*$
  - match: ^(?!\1\S)
    pop: 2
  indent_require_deeper_level:
  - match: ^\s*$
  - match: ^(?!\1[\t ])
    pop: 2

  ### @script block #######################################
  # Already matched the {{full_indent}} as \1
  # We're not quite matching this correctly, i.e.
  #   @script (foo,
  #     bar) => 23
  # will not highlight correctly
  # But that's okay because it's kinda weird anyway
  at_script:
  - match: (@script).*
    captures:
      1: keyword.control.flow.js
  - include: indent_require_deeper_level
  - match: ^([\t ]+)
    embed: scope:source.js
    embed_scope: source.js.embedded.csml
    escape: ^(?!\1)(?=[\t ]*\S)

  ### @statement ##########################################
  at_statement:
  - match: (@(?=\w))
    scope: keyword.control.flow.js
    push:
    - match: ""
      embed: scope:source.js
      embed_scope: source.js.embedded.csml
      escape: $
      pop: 2


  ### Selector ############################################
  selector_start:
  - include: indent_require_same_level
  - match: ^({{indent}}*&)
    scope: entity.name.tag.html
  - match: ^(?={{indent}}*)
    pop: 2
  - match: (?={{ident_start}}|{{)
    push: tag_name
  - match: (?=#)
    push: id_attribute
  - match: (?=\.)
    push: class_attribute
  - match: (?=\[)
    push: attribute
  - match: (?=:)
    push: flag
  - match: (?=\s*>\s*)
    push: nesting_combinator
  - match: (?=\s+@)
    push: at_statement
  - match: (?=\s+\S)
    push: text
  - match: \s*


  ### Modifiers ###########################################
  # Basically, tag-name, #id, .class-name, [attr=value] and
  # :flag
  # Note they can include interpolation
  tag_name:
  - match: "{{ident}}"
    scope: entity.name.tag.html
  - include: interpolation
  - match: ""
    pop: 1

  id_attribute:
  - match: "#"
    scope: entity.other.attribute-name.id.css
    push:
    - match: "{{ident}}"
      scope: entity.other.attribute-name.id.css
    - include: interpolation
    - match: ""
      pop: 2

  class_attribute:
  - match: \.
    scope: entity.other.attribute-name.class.css
    push:
    - match: "{{ident}}"
      scope: entity.other.attribute-name.class.css
    - include: interpolation
    - match: ""
      pop: 2

  attribute:
  - match: (\[\s*)
    scope: punctuation.section.brackets.begin.css
    push:
    - match: "{{ident}}"
      scope: entity.other.attribute-name.css
    - include: interpolation
    - match: \s*=\s*
      scope: keyword.operator.comparison.css
      push:
      - match: \"
        scope: punctuation.definition.string.begin.css
        push:
        - match: ([^"{]|\{(?!\{))*
          scope: string.quoted.double.css
        - include: interpolation
        - match: \"
          pop: 4
      - match: \'
        scope: punctuation.definition.string.begin.css
        push:
        - match: ([^'{]|\{(?!\{))*
          scope: string.quoted.single.css
        - include: interpolation
        - match: \'
          pop: 4
      - match: ""
        push:
        - include: interpolation
        - match: ([^ '"`<>=\]{]|\{(?!\{))*
          scope: string.unquoted.css
        - match: (?=\s*])
          pop: 4
        - match: .*
          scope: invalid.illegal.unexpected-token.css
          pop: 4

      - match: ""
        pop: 3
    - match: (\])
      scope: punctuation.section.brackets.end.css
      pop: 2

  flag:
  - match: ":"
    scope: variable.language
    push:
    - match: "{{ident}}"
      scope: variable.language
      push:
      - match: \(
        scope: variable.language
        push:
        - include: interpolation
        - match: ([^){]|\{(?!\{))*
          scope: variable.language
        - match: \)
          scope: variable.language
          pop: 1
      - match: ""
        pop: 3

  preformatted_flag:
  - match: "{{preformatted_flag}}"
    scope: variable.language
    push:
    - match: \(
      scope: variable.language
      push:
      - include: interpolation
      - match: ([^){]|\{(?!\{))*
        scope: variable.language
      - match: \)
        scope: variable.language
        pop: 1
    - match: ""
      pop: 1
  - include: indent_require_deeper_level
  - match: "{{indent}}+"
    push:
    - match: ([^{\n]|\{(?!\{))*
      scope: text.html.basic
    - include: interpolation
    - match: ""
      pop: 1

  non_preformatted_flag:
  - match: ":{{ident}}"
    scope: variable.language
    push:
    - match: \(
      scope: variable.language
      push:
      - include: interpolation
      - match: ([^){]|\{(?!\{))*
        scope: variable.language
      - match: \)
        scope: variable.language
        pop: 1
    - match: ""
      pop: 1
  - include: text

  nesting_combinator:
  - match: \s*>\s*
    scope: keyword.operator.combinator.css
    pop: 1

  ### Interpolation #######################################
  interpolation:
  - match: ({{)
    captures:
      1: punctuation.section.brackets.begin.js
    embed: scope:source.js
    embed_scope: source.js.embedded.csml
    escape: (}})
    escape_captures:
      1: punctuation.section.brackets.end.js

  ### Just regular ol' text ###############################
  text:
  - match: ([^\S\n])
    push:
    - match: ([^{\n]|\{(?!\{))*
      scope: text.html.basic
    - include: interpolation
    - match: ""
      pop: 2



  #   - match: ^\s*$
  #   - match: ^(?={{indent}}*@script\b)
  #     push:
  #       - match: ({{full_indent}})
  #         push: at_script
  #   - match: ^(?={{indent}}*(?i:!doctype))
  #     push: doctype
  #   # - match: ^(?={{indent}}*(?i:[a-z]|{{))
  #   #   push: selector
  #   - match: ^(?={{indent}}*(?i:[a-z]|{{))
  #     push: selector
  #   - match: .*
  #     # scope: invalid.deprecated.css

  # at_script:
  #   - match: (?:@script\b)
  #     scope: keyword.control.flow.js
  #   - match: ^\s*$
  #   - match: ^(?!\1[\t ])
  #     pop: 2
  #   - match: ^([\t ]+)
  #     embed: scope:source.js
  #     embed_scope: source.js.embedded.csml
  #     escape: ^(?!\1)(?=[\t ]*\S)

  # doctype:
  #   - match: ({{full_indent}})
  #     push:
  #       - match: (!)((?i:doctype))
  #         captures:
  #           1: punctuation.definition.tag.html
  #           2: keyword.declaration.doctype.html
  #         push:
  #           - match: \s+
  #           - match: (?:[^"]*)
  #             scope: constant.language.doctype.html
  #           - match: '"[^"]*"'
  #             scope: string.quoted.double.doctype.identifiers-and-DTDs.html
  #           - match: $
  #             pop: 3

  # selector:
  #   - match: ({{full_indent}})
  #     push:
  #       - match: ^\s*$
  #       - match: ^(?!\1)
  #         pop: 2
  #       - match: ^(?=\1{{indent}})
  #         pop: 2
  #       - match: ^\1(?=\S)
  #         scope: invalid.deprecated.css
  #         pop: 1
  #       - match: (?=(?i:[a-z]|{{|&))
  #         push: tag_name
  #       - match: (?=\.)
  #         push: class_attribute
  #       - match: $
  #       - match: ""
  #         pop: 2

  #       # - match:
  #       # - match: (?=\&)
  #       #   pop: 2

  # tag_name:
  #   - match: (?i:[-\w]*)
  #     scope: entity.name.tag.html
  #   - match: (?={{)
  #     push: interpolation
  #   - match: ""
  #     pop: 1

  # class_attribute:
  #   - match: \.
  #     scope: entity.other.attribute-name.id.css
  #     push:
  #       - match: (?i:[-\w]*)
  #         scope: entity.other.attribute-name.class.css
  #       - match: (?={{)
  #         push: interpolation
  #       - match: ""
  #         pop: 2

  # interpolation:
  #   - match: ({{)
  #     captures:
  #       1: punctuation.section.brackets.begin.js
  #     embed: scope:source.js
  #     embed_scope: source.js.embedded.csml
  #     escape: (}})
  #     escape_captures:
  #       1: punctuation.section.brackets.end.js
  #     pop: 1


  # selector:
  #   - match: ({{full_indent}})
  #     push:
  #       - match: (?=(?i:[a-z]|{{|&))
  #         push: tag_name
  #       - match: (?=#)
  #         push: id_attribute
  #       - match: (?=\.)
  #         push: class_attribute
  #       - match: (?=\1\&)
  #         # push: selector
  #         pop: 2
  #       - match: ""
  #         pop: 2

  # tag_name:
  #   - match: (?i:[-\w]*)
  #     scope: entity.name.tag.html
  #   - match: (?={{)
  #     push: interpolation
  #   - match: ""
  #     pop: 1

  # id_attribute:
  #   - match: "#"
  #     scope: entity.other.attribute-name.id.css
  #     push:
  #       - match: (?i:[-\w]*)
  #         scope: entity.other.attribute-name.id.css
  #       - match: (?={{)
  #         push: interpolation
  #       - match: ""
  #         pop: 1
  #   - match: ""
  #     pop: 1

  # class_attribute:
  #   - match: \.
  #     scope: entity.other.attribute-name.id.css
  #     push:
  #       - match: (?i:[-\w]*)
  #         scope: entity.other.attribute-name.class.css
  #       - match: (?={{)
  #         push: interpolation
  #       - match: ""
  #         pop: 1
  #   - match: ""
  #     pop: 1

  # # nested_selector:
  # #   - match:

  # interpolation:
  #   - match: ({{)
  #     captures:
  #       1: punctuation.section.brackets.begin.js
  #     embed: scope:source.js
  #     embed_scope: source.js.embedded.csml
  #     escape: (}})
  #     escape_captures:
  #       1: punctuation.section.brackets.end.js
  #     pop: 1









  # full_selector:
  #   - match: ({{full_indent}})
  #     push:
  #       - match: ""
  #         # push: partial_selector
  #         pop: 2


  # # partial_selector:
  #   # - match:

  # tag_name:
  #   - match: (?i:[a-z]*)
  #     scope: entity.name.tag.html
  #   - match: (?={{)
  #     push: interpolation
  #   - match: ""
  #     pop: 1

  # interpolation:
  #   - match: ({{)
  #     captures:
  #       1: punctuation.section.brackets.begin.js
  #     embed: scope:source.js
  #     embed_scope: source.js.embedded.csml
  #     escape: (}})
  #     escape_captures:
  #       1: punctuation.section.brackets.end.js
  #     pop: 1






  # js_block
  #   - match: ^\s*$
  #   - match: ^(?!\1[\t ])
  #     pop: true
  #   - match: ^([\t ]+)
  #     embed: Packages/JavaScript/JavaScript.sublime-syntax
  #     embed_scope: source.js.embedded.csml
  #     escape: ^(?!\1)(?=[\t ]*\S)









  # THIS DOES NOT WORK
  # main:
  #   - match: ^([\t ]*)
  #     push:
  #       - match: "@script"
  #         scope: keyword.control.flow.js
  #         set: js_block
  # js_block:
  #   - match: ^\s*$
  #   - match: ^(?!\1[\t ])
  #     pop: true
  #   - match: ^([\t ]+)
  #     embed: Packages/JavaScript/JavaScript.sublime-syntax
  #     embed_scope: source.js.embedded.csml
  #     escape: ^(?!\1)(?=[\t ]*\S)


  # THIS KINDA WORKS, BUT IS NOT SCALABLE (OR MAYBE...)
  # main:
  #   - match: ^([\t ]*)(@script\b)
  #     captures:
  #       2: keyword.control.flow.js
  #     push: js_block
  #   - match: (!)(\w*)
  #     captures:
  #       1: punctuation.definition.tag.html
  #       2: keyword.declaration.doctype.html
  #     push:
  #       - match: \s+
  #       - match: '"[^"]*"'
  #         scope: string.quoted.double.doctype.identifiers-and-DTDs.html
  #       - match: .*$
  #         scope: constant.language.doctype.html
  #         pop: true
  # js_block:
  #   - match: ^\s*$
  #   - match: ^(?!\1[\t ])
  #     pop: true
  #   - match: ^([\t ]+)
  #     embed: Packages/JavaScript/JavaScript.sublime-syntax
  #     embed_scope: source.js.embedded.csml
  #     escape: ^(?!\1)(?=[\t ]*\S)


